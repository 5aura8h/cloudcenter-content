#!/bin/bash

# lambda service script

# exec > >(tee -a /usr/local/osmosix/logs/service.log) 2>&1

. /utils.sh

cmd=$1
SVCNAME="lambda1"
export INSTALL_DIR="/usr/local/aws"


# the following should be parameters from the service

if [ -z "$lambdaFunctionName" ];
then
	export functionName="lambda-"$currentTierJobId;
fi

if [ -z "$lambdaRuntime" ];
then
	print_error "Runtime missing for Lambda function"
	exit 119
fi

if [ -z "$lambdaHandler" ];
then
	print_error "Handler missing for Lambda function"
	exit 118
fi

if [ -z "$lambdaRole" ];
then
	print_error "Role missing for Lambda function"
	exit 117
fi

if [ -z "$lambdaCodeS3Bucket" ];
then
	print_error "S3 Bucket containing function code missing"
	exit 116
fi

if [ -z "$lambdaCodeS3Key" ];
then
	print_error "S3 Key containing function code missing"
	exit 115
fi

if [ ! -z "$lambdaRegion" ];
then
	export region=$lambdaRegion;
fi

if [ ! -z "$region" ];
then
	export region="us-east-1";
fi


installAWSCli() {

    print_log "Installing AWS CLI tools..."

	if [ -d $INSTALL_DIR ]; then
			echo  "AWS Cli already installed skipping the AWS Cli Install";
			export PATH=$PATH:$INSTALL_DIR/bin
			echo "PATH value is = $PATH"
	else
			mkdir -p $INSTALL_DIR
			cd $INSTALL_DIR
			wget http://s3.amazonaws.com/aws-cli/awscli-bundle.zip
			unzip awscli-bundle.zip
			./awscli-bundle/install -i $INSTALL_DIR
			rm -f awscli-bundle.zip
			export PATH=$PATH:$INSTALL_DIR/bin
			echo "PATH value is = $PATH"
	fi

}


configureAWSCli(){
    print_log "Configuring AWS CLI..."
	export JAVA_HOME="/usr/lib/jvm/jre"
	export EC2_REGION="$region"
	export PATH=$PATH:$INSTALL_DIR/bin

	if [ ! -z "$lambdaAWSkey" ] && [ ! -z "$lambdaAWSsecretkey" ];
	then
		export AWS_ACCESS_KEY_ID="$lambdaAWSkey"
		export AWS_SECRET_ACCESS_KEY="$lambdaAWSsecretkey"

	elif [ -z $CliqrCloudAccountPwd ] || [ -z $CliqrCloud_AccessSecretKey ];
	then
		print_error "Insufficient permissions to access the Cloud Account, contact your Admin for the Cloud Account Accessibility";
		exit 127
	else
		export AWS_ACCESS_KEY_ID="$CliqrCloudAccountPwd"
		export AWS_SECRET_ACCESS_KEY="$CliqrCloud_AccessSecretKey"

	fi

	if [ -z $AWS_ACCESS_KEY_ID ];then
			print_error "Cloud Account Access Key not found or couldn't generate with IAM role"
			exit 127
	fi

	if [ -z $AWS_SECRET_ACCESS_KEY ];then
			print_error "Cloud Account Secret Key not found or couldn't generate with IAM role"
			exit 127
	fi

	if [ -z $region ];then
			print_error "Region Value is not set"
			exit 127
	fi

	export "AWS_DEFAULT_REGION"=$region

}


createLambdaFunction(){

	print_log "$(env)"
	result=`which aws`
	print_log "aws path is $result"
	print_log "--no-verify-ssl lambda create-function --function-name $lambdaFunctionName --runtime $lambdaRuntime --handler $lambdaHandler --role $lambdaRole --code S3Bucket=$lambdaCodeS3Bucket,S3Key=$lambdaCodeS3Key"

    result=`aws --no-verify-ssl lambda create-function --function-name $lambdaFunctionName --runtime $lambdaRuntime --handler $lambdaHandler --role $lambdaRole --code S3Bucket=$lambdaCodeS3Bucket,S3Key=$lambdaCodeS3Key 2>&1`

    if [ $? -eq 0 ];
    then
        print_log "Successfully created the Lambda function $lambdaFunctionName"
    else
        print_error "Error in creating Lambda function $lambdaFunctionName"
	print_error "result is $result"
        exit 120
    fi

}

deleteLambdaFunction(){

    result=`aws lambda delete-function --function-name $lambdaFunctionName`
    if [ $? -eq 0 ];
    then
        print_log "Lambda function $LambdaFunctionName deleted successfully"
    fi

}


case $cmd in
	start)
		echo "Service Action -  $cmd"
		echo "Installing AWS Cli Tools"
		installAWSCli
		configureAWSCli
		createLambdaFunction
		exit 0
		;;
	stop)
		echo "Service Action -  $cmd"
        	echo "Installing AWS Cli Tools"
        	installAWSCli
        	configureAWSCli
		deleteLambdaFunction
        	exit 0
		;;
	suspend)
		echo "Service Action -  $cmd"
		echo "Installing AWS Cli Tools"
		installAWSCli
        	configureAWSCli
		deleteLambdaFunction
		exit 0
		;;
	resume)
		echo "Service Action -  $cmd"
		echo "Installing AWS Cli Tools"
		installAWSCli
        	configureAWSCli
		createLambdaFunction
		exit 0
		;;
	*)
		echo "unknown command"
		exit 127
		;;
esac
